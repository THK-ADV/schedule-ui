{"ast":null,"code":"import { isLecturer } from '../../models/user';\nimport { describeLecturer, describeUser } from '../../utils/describe';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./module.service\";\nimport * as i2 from \"../../generic-ui/crud-table/crud-table.component\";\nconst _c0 = function () {\n  return {\n    active: \"label\",\n    direction: \"asc\"\n  };\n};\nexport class ModulesComponent {\n  constructor(service) {\n    this.service = service;\n    this.headerTitle = 'Module';\n    this.tooltipTitle = 'Modul hinzufügen';\n    this.tableContent = (module, attr) => {\n      switch (attr) {\n        case 'label':\n          return module.label;\n        case 'abbreviation':\n          return module.abbreviation;\n        case 'courseManager':\n          const user = module.courseManager;\n          return isLecturer(user) ? describeLecturer(user) : describeUser(user);\n        case 'credits':\n          return module.credits.toString();\n        default:\n          return '???';\n      }\n    };\n    this.columns = service.columns();\n    this.filterAttrs = this.columns.map(_ => _.title);\n    this.data = service.modules;\n    this.delete = service.deleteAction();\n    this.create = service.createAction();\n    this.update = service.updateAction();\n  }\n}\nModulesComponent.ɵfac = function ModulesComponent_Factory(t) {\n  return new (t || ModulesComponent)(i0.ɵɵdirectiveInject(i1.ModuleService));\n};\nModulesComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ModulesComponent,\n  selectors: [[\"schd-modules\"]],\n  decls: 1,\n  vars: 13,\n  consts: [[3, \"headerTitle\", \"tooltipTitle\", \"fetchData\", \"columns\", \"sort\", \"tableContent\", \"sortingDataAccessor\", \"useTableContentForFiltering\", \"filterAttrs\", \"delete\", \"create\", \"update\"]],\n  template: function ModulesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"schd-crud-table\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"headerTitle\", ctx.headerTitle)(\"tooltipTitle\", ctx.tooltipTitle)(\"fetchData\", ctx.data)(\"columns\", ctx.columns)(\"sort\", i0.ɵɵpureFunction0(12, _c0))(\"tableContent\", ctx.tableContent)(\"sortingDataAccessor\", ctx.tableContent)(\"useTableContentForFiltering\", true)(\"filterAttrs\", ctx.filterAttrs)(\"delete\", ctx.delete)(\"create\", ctx.create)(\"update\", ctx.update);\n    }\n  },\n  dependencies: [i2.CrudTableComponent]\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}