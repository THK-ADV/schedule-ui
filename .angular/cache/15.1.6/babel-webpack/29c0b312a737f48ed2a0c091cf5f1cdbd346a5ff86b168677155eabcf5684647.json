{"ast":null,"code":"import { EMPTY } from 'rxjs';\nimport { describeExamReg, describeModule, describeModuleAtom } from '../../utils/describe';\nimport { mapOpt, zip3 } from '../../utils/optional';\nimport { parseBoolean, parseExaminationRegulationAtom, parseModuleAtom } from '../../utils/parser';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../http/module-examination-regulation-api.service\";\nimport * as i2 from \"../../http/module-api.service\";\nimport * as i3 from \"../../http/examination-regulation-api.service\";\nexport class ModuleExaminationRegulationService {\n  constructor(http, moduleService, examRegService) {\n    this.http = http;\n    this.moduleService = moduleService;\n    this.examRegService = examRegService;\n    this.moduleExams = () => this.http.moduleExams();\n    this.columns = () => [{\n      attr: 'module',\n      title: 'Modul'\n    }, {\n      attr: 'examinationRegulation',\n      title: 'Prüfungsordnung'\n    }, {\n      attr: 'mandatory',\n      title: 'Pflichtmodul'\n    }];\n    this.deleteAction = () => ({\n      labelForDialog: a => `${describeModule(a.module)} für ${describeExamReg(a.examinationRegulation)}`,\n      delete: a => this.http.delete(a.id)\n    });\n    this.createAction = () => [{\n      create: attrs => mapOpt(this.parseProtocol(attrs), this.http.create) ?? EMPTY,\n      show: a => JSON.stringify(a)\n    }, {\n      objectName: 'Modul mit Prüfungsordnung',\n      inputs: this.createInputs()\n    }];\n    this.createInputs = () => [this.module, this.exam, this.mandatory];\n    this.parseProtocol = attrs => mapOpt(zip3(parseModuleAtom(attrs.module), parseExaminationRegulationAtom(attrs.examinationRegulation), parseBoolean(attrs.mandatory)), ([m, er, b]) => ({\n      module: m.id,\n      examinationRegulation: er.id,\n      mandatory: b\n    }));\n    this.module = {\n      label: 'Modul',\n      attr: 'module',\n      required: true,\n      disabled: false,\n      show: describeModuleAtom,\n      kind: 'auto-complete',\n      data: moduleService.modulesAtomic()\n    };\n    this.exam = {\n      label: 'Prüfungsordnung',\n      attr: 'examinationRegulation',\n      required: true,\n      disabled: false,\n      show: describeExamReg,\n      kind: 'auto-complete',\n      data: examRegService.examinationRegulations()\n    };\n    this.mandatory = {\n      label: 'Pflichtmodul',\n      attr: 'mandatory',\n      disabled: false,\n      required: true,\n      kind: 'boolean'\n    };\n  }\n}\nModuleExaminationRegulationService.ɵfac = function ModuleExaminationRegulationService_Factory(t) {\n  return new (t || ModuleExaminationRegulationService)(i0.ɵɵinject(i1.ModuleExaminationRegulationApiService), i0.ɵɵinject(i2.ModuleApiService), i0.ɵɵinject(i3.ExaminationRegulationApiService));\n};\nModuleExaminationRegulationService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ModuleExaminationRegulationService,\n  factory: ModuleExaminationRegulationService.ɵfac,\n  providedIn: 'root'\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}