{"ast":null,"code":"import { isStudyProgramAtom } from '../models/study-program';\nimport { isTeachingUnit } from '../models/teaching-unit';\nimport { isGraduation } from '../models/graduation';\nimport { isLecturer } from '../models/user';\nimport { isModule, isModuleAtom } from '../models/module';\nimport { allSemesterIndices } from '../models/semester-index';\nimport { mapOpt } from './optional';\nimport { allSeasons } from '../models/season';\nimport { allLanguages } from '../models/language';\nimport { isExaminationRegulationAtom } from '../models/examination-regulation';\nexport const parseIntNumber = s => {\n  const int = parseInt(s, undefined);\n  return isNaN(int) ? undefined : int;\n};\nexport const parseFloatNumber = s => {\n  const float = parseFloat(s);\n  return isNaN(float) ? undefined : float;\n};\nexport const parseBoolean = a => {\n  switch (a) {\n    case true:\n    case 'true':\n      return true;\n    case false:\n    case 'false':\n      return false;\n    default:\n      return undefined;\n  }\n};\nexport const parseDate = s => {\n  const d = new Date(s);\n  return isNaN(d.getTime()) ? undefined : d;\n};\nexport const parseSemesterIndex = s => mapOpt(parseIntNumber(s), n => allSemesterIndices().find(si => si === n));\nexport const parseSeason = s => allSeasons().find(sea => sea === s);\nexport const parseLanguage = s => allLanguages().find(l => l === s);\nexport const parseStudyProgramAtom = s => isStudyProgramAtom(s) ? s : undefined;\nexport const parseModule = s => isModule(s) ? s : undefined;\nexport const parseTeachingUnit = s => isTeachingUnit(s) ? s : undefined;\nexport const parseGraduation = s => isGraduation(s) ? s : undefined;\nexport const parseLecturer = s => isLecturer(s) ? s : undefined;\nexport const parseExaminationRegulationAtom = er => isExaminationRegulationAtom(er) ? er : undefined;\nexport const parseModuleAtom = m => isModuleAtom(m) ? m : undefined;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}