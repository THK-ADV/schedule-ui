{"ast":null,"code":"import { applyFilter, nonAtomicParams } from './http-filter';\nimport { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./http.service\";\nexport class SemesterApiService {\n  constructor(http) {\n    this.http = http;\n    this.resource = 'semesters';\n    this.semesters = () => this.http.getAll(this.resource, nonAtomicParams).pipe(map(this.parseSemesterJSON));\n    this.currentSemester = () => this.single(applyFilter(nonAtomicParams, [{\n      key: 'select',\n      value: 'current'\n    }]));\n    this.draftSemester = () => this.single(applyFilter(nonAtomicParams, [{\n      key: 'select',\n      value: 'draft'\n    }]));\n    this.delete = id => this.http.delete(`${this.resource}/${id}`);\n    this.create = p => this.http.create(this.resource, p);\n    this.update = (p, id) => this.http.put(`${this.resource}/${id}`, p);\n    this.single = params => this.http.getAll(this.resource, params).pipe(map(xs => this.parseSemesterJSON(xs).shift()));\n    this.parseSemesterJSON = ss => ss.map(s => ({\n      ...s,\n      start: new Date(s.start),\n      end: new Date(s.end),\n      lectureStart: new Date(s.lectureStart),\n      lectureEnd: new Date(s.lectureEnd)\n    }));\n  }\n}\nSemesterApiService.ɵfac = function SemesterApiService_Factory(t) {\n  return new (t || SemesterApiService)(i0.ɵɵinject(i1.HttpService));\n};\nSemesterApiService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: SemesterApiService,\n  factory: SemesterApiService.ɵfac,\n  providedIn: 'root'\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}