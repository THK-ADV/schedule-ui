{"ast":null,"code":"import { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { FormGroup } from '@angular/forms';\nimport { formControlForTextInput } from './input-text/input-text.component';\nimport { formControlForAutocompleteInput } from './input-auto-complete/input-auto-complete.component';\nimport { combine } from './form-input';\nimport { formControlForDateInput } from './input-date/input-date.component';\nimport { formControlForBooleanInput } from './input-boolean/input-boolean.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"./input-auto-complete/input-auto-complete.component\";\nimport * as i5 from \"./input-date/input-date.component\";\nimport * as i6 from \"./input-boolean/input-boolean.component\";\nimport * as i7 from \"./input-text/input-text.component\";\nimport * as i8 from \"@angular/material/button\";\nfunction CreateDialogComponent_ng_container_4_schd_input_auto_complete_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"schd-input-auto-complete\", 10);\n  }\n  if (rf & 2) {\n    const i_r1 = i0.ɵɵnextContext().$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"input\", ctx_r2.asAutocomplete(i_r1))(\"formControl\", ctx_r2.formControl(i_r1.attr));\n  }\n}\nfunction CreateDialogComponent_ng_container_4_schd_input_date_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"schd-input-date\", 10);\n  }\n  if (rf & 2) {\n    const i_r1 = i0.ɵɵnextContext().$implicit;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"input\", ctx_r3.asDateInput(i_r1))(\"formControl\", ctx_r3.formControl(i_r1.attr));\n  }\n}\nfunction CreateDialogComponent_ng_container_4_schd_input_boolean_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"schd-input-boolean\", 10);\n  }\n  if (rf & 2) {\n    const i_r1 = i0.ɵɵnextContext().$implicit;\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"input\", ctx_r4.asBooleanInput(i_r1))(\"formControl\", ctx_r4.formControl(i_r1.attr));\n  }\n}\nfunction CreateDialogComponent_ng_container_4_schd_input_text_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"schd-input-text\", 10);\n  }\n  if (rf & 2) {\n    const i_r1 = i0.ɵɵnextContext().$implicit;\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"input\", ctx_r5.asTextInput(i_r1))(\"formControl\", ctx_r5.formControl(i_r1.attr));\n  }\n}\nfunction CreateDialogComponent_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0)(1, 7);\n    i0.ɵɵtemplate(2, CreateDialogComponent_ng_container_4_schd_input_auto_complete_2_Template, 1, 2, \"schd-input-auto-complete\", 8);\n    i0.ɵɵtemplate(3, CreateDialogComponent_ng_container_4_schd_input_date_3_Template, 1, 2, \"schd-input-date\", 8);\n    i0.ɵɵtemplate(4, CreateDialogComponent_ng_container_4_schd_input_boolean_4_Template, 1, 2, \"schd-input-boolean\", 8);\n    i0.ɵɵtemplate(5, CreateDialogComponent_ng_container_4_schd_input_text_5_Template, 1, 2, \"schd-input-text\", 9);\n    i0.ɵɵelementContainerEnd()();\n  }\n  if (rf & 2) {\n    const i_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitch\", i_r1.kind);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", \"auto-complete\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", \"date\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", \"boolean\");\n  }\n}\nexport let CreateDialogComponent = /*#__PURE__*/(() => {\n  class CreateDialogComponent {\n    constructor(dialogRef, payload) {\n      this.dialogRef = dialogRef;\n      this.payload = payload;\n      this.formGroup = new FormGroup({});\n      this.formControlForInput = combine([formControlForTextInput, formControlForAutocompleteInput, formControlForDateInput, formControlForBooleanInput]);\n      this.data = () => this.payload[0];\n      this.cancel = () => this.dialogRef.close('cancel');\n      this.onSubmit = () => {\n        if (!this.formGroup.valid) {\n          return;\n        }\n        this.dialogRef.close(this.formGroup.value);\n      };\n      this.formControl = attr => this.formGroup.controls[attr];\n      this.asAutocomplete = i => i;\n      this.asTextInput = i => i || i;\n      this.asDateInput = i => i;\n      this.asBooleanInput = i => i;\n      const [data, kind] = payload;\n      this.buttonTitle = kind === 'create' ? 'Erstellen' : 'Aktualisieren';\n      this.title = `${data.objectName} ${this.buttonTitle.toLowerCase()}`;\n      data.inputs.forEach(i => {\n        const fc = this.formControlForInput(i);\n        if (fc) {\n          if (i.disabled) {\n            fc.disable();\n          }\n          this.formGroup.addControl(i.attr, fc);\n        }\n      });\n    }\n    ngOnInit() {}\n  }\n  CreateDialogComponent.instance = (dialog, data, kind) => dialog.open(CreateDialogComponent, {\n    data: [data, kind]\n  });\n  CreateDialogComponent.ɵfac = function CreateDialogComponent_Factory(t) {\n    return new (t || CreateDialogComponent)(i0.ɵɵdirectiveInject(i1.MatDialogRef), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA));\n  };\n  CreateDialogComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CreateDialogComponent,\n    selectors: [[\"schd-create-dialog\"]],\n    decls: 10,\n    vars: 5,\n    consts: [[\"mat-dialog-title\", \"\"], [3, \"formGroup\", \"ngSubmit\"], [\"mat-dialog-content\", \"\"], [4, \"ngFor\", \"ngForOf\"], [\"mat-dialog-actions\", \"\"], [\"type\", \"button\", \"mat-flat-button\", \"\", 3, \"click\"], [\"mat-flat-button\", \"\", \"color\", \"primary\", 3, \"disabled\"], [3, \"ngSwitch\"], [\"ngDefaultControl\", \"\", 3, \"input\", \"formControl\", 4, \"ngSwitchCase\"], [\"ngDefaultControl\", \"\", 3, \"input\", \"formControl\", 4, \"ngSwitchDefault\"], [\"ngDefaultControl\", \"\", 3, \"input\", \"formControl\"]],\n    template: function CreateDialogComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\", 0);\n        i0.ɵɵtext(1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function CreateDialogComponent_Template_form_ngSubmit_2_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(3, \"div\", 2);\n        i0.ɵɵtemplate(4, CreateDialogComponent_ng_container_4_Template, 6, 4, \"ng-container\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 4)(6, \"button\", 5);\n        i0.ɵɵlistener(\"click\", function CreateDialogComponent_Template_button_click_6_listener() {\n          return ctx.cancel();\n        });\n        i0.ɵɵtext(7, \"Abbrechen\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"button\", 6);\n        i0.ɵɵtext(9);\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate(ctx.title);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.formGroup);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.data().inputs);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"disabled\", !ctx.formGroup.valid);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate(ctx.buttonTitle);\n      }\n    },\n    directives: [i1.MatDialogTitle, i2.ɵNgNoValidate, i2.NgControlStatusGroup, i2.FormGroupDirective, i1.MatDialogContent, i3.NgForOf, i3.NgSwitch, i3.NgSwitchCase, i4.InputAutoCompleteComponent, i2.DefaultValueAccessor, i2.NgControlStatus, i2.FormControlDirective, i5.InputDateComponent, i6.InputBooleanComponent, i3.NgSwitchDefault, i7.InputTextComponent, i1.MatDialogActions, i8.MatButton],\n    styles: [\"\"]\n  });\n  return CreateDialogComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}