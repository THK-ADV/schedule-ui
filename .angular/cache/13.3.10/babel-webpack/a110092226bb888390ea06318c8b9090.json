{"ast":null,"code":"import { delay } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./alert.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@ng-bootstrap/ng-bootstrap\";\nfunction AlertComponent_ng_container_0_p_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const alert_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(alert_r1.body.value);\n  }\n}\nfunction AlertComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"ngb-alert\", 1);\n    i0.ɵɵlistener(\"close\", function AlertComponent_ng_container_0_Template_ngb_alert_close_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const alert_r1 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.close(alert_r1);\n    });\n    i0.ɵɵelementContainerStart(2, 2);\n    i0.ɵɵtemplate(3, AlertComponent_ng_container_0_p_3_Template, 2, 1, \"p\", 3);\n    i0.ɵɵelementContainerEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const alert_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"type\", alert_r1.type);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitch\", alert_r1.body.kind);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", \"message\");\n  }\n}\nexport let AlertComponent = /*#__PURE__*/(() => {\n  class AlertComponent {\n    constructor(alertService) {\n      this.alertService = alertService;\n      this.delay = 5000;\n      this.subs = [];\n      this.alerts = [];\n      this.close = alert => this.alerts.splice(this.alerts.indexOf(alert), 1);\n    }\n    ngOnInit() {\n      const alerts = this.alertService.alerts$();\n      this.subs.push(alerts.subscribe(a => this.alerts.push(a)));\n      this.subs.push(alerts.pipe(delay(this.delay)).subscribe(a => this.close(a)));\n    }\n    ngOnDestroy() {\n      this.subs.forEach(_ => _.unsubscribe());\n    }\n  }\n  AlertComponent.ɵfac = function AlertComponent_Factory(t) {\n    return new (t || AlertComponent)(i0.ɵɵdirectiveInject(i1.AlertService));\n  };\n  AlertComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AlertComponent,\n    selectors: [[\"schd-alert\"]],\n    decls: 1,\n    vars: 1,\n    consts: [[4, \"ngFor\", \"ngForOf\"], [3, \"type\", \"close\"], [3, \"ngSwitch\"], [4, \"ngSwitchCase\"]],\n    template: function AlertComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, AlertComponent_ng_container_0_Template, 4, 3, \"ng-container\", 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngForOf\", ctx.alerts);\n      }\n    },\n    directives: [i2.NgForOf, i3.NgbAlert, i2.NgSwitch, i2.NgSwitchCase],\n    styles: [\"\"]\n  });\n  return AlertComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}