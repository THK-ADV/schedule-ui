{"ast":null,"code":"import { __extends } from 'tslib';\nimport * as preact from 'preact';\nimport * as preactCompat from 'preact/compat';\nvar globalObj = typeof globalThis !== 'undefined' ? globalThis : window; // // TODO: streamline when killing IE11 support\nif (globalObj.FullCalendarVDom) {\n  console.warn('FullCalendar VDOM already loaded');\n} else {\n  globalObj.FullCalendarVDom = {\n    Component: preact.Component,\n    createElement: preact.createElement,\n    render: preact.render,\n    createRef: preact.createRef,\n    Fragment: preact.Fragment,\n    createContext: createContext,\n    createPortal: preactCompat.createPortal,\n    flushSync: flushSync,\n    unmountComponentAtNode: unmountComponentAtNode\n  };\n}\n// HACKS...\n// TODO: lock version\n// TODO: link gh issues\nfunction flushSync(runBeforeFlush) {\n  runBeforeFlush();\n  var oldDebounceRendering = preact.options.debounceRendering; // orig\n  var callbackQ = [];\n  function execCallbackSync(callback) {\n    callbackQ.push(callback);\n  }\n  preact.options.debounceRendering = execCallbackSync;\n  preact.render(preact.createElement(FakeComponent, {}), document.createElement('div'));\n  while (callbackQ.length) {\n    callbackQ.shift()();\n  }\n  preact.options.debounceRendering = oldDebounceRendering;\n}\nvar FakeComponent = /** @class */function (_super) {\n  __extends(FakeComponent, _super);\n  function FakeComponent() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  FakeComponent.prototype.render = function () {\n    return preact.createElement('div', {});\n  };\n  FakeComponent.prototype.componentDidMount = function () {\n    this.setState({});\n  };\n  return FakeComponent;\n}(preact.Component);\nfunction createContext(defaultValue) {\n  var ContextType = preact.createContext(defaultValue);\n  var origProvider = ContextType.Provider;\n  ContextType.Provider = function () {\n    var _this = this;\n    var isNew = !this.getChildContext;\n    var children = origProvider.apply(this, arguments); // eslint-disable-line prefer-rest-params\n    if (isNew) {\n      var subs_1 = [];\n      this.shouldComponentUpdate = function (_props) {\n        if (_this.props.value !== _props.value) {\n          subs_1.forEach(function (c) {\n            c.context = _props.value;\n            c.forceUpdate();\n          });\n        }\n      };\n      this.sub = function (c) {\n        subs_1.push(c);\n        var old = c.componentWillUnmount;\n        c.componentWillUnmount = function () {\n          subs_1.splice(subs_1.indexOf(c), 1);\n          old && old.call(c);\n        };\n      };\n    }\n    return children;\n  };\n  return ContextType;\n}\nfunction unmountComponentAtNode(node) {\n  preact.render(null, node);\n}","map":null,"metadata":{},"sourceType":"module"}